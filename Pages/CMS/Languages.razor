@page "/cms/languages"
@layout Taraweb.Shared.cms.MainLayout
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject ContextMenuService ContextMenuService
@inject TooltipService TooltipService
@inject NotificationService NotificationService

@inject TarawebM1Service TarawebM1Service

<PageTitle>Languages</PageTitle>
<RadzenContent Container="main">
    <RadzenHeading Size="H1" Text="Languages" />
    <RadzenButton Icon="add_circle_outline" style="margin-bottom: 10px" Text="Add" Click="@AddButtonClick" />
    <RadzenSplitButton Icon="get_app" style="margin-left: 10px; margin-bottom: 10px" Text="Export" Click="@ExportClick">
        <RadzenSplitButtonItem Text="Excel" Value="xlsx" />
        <RadzenSplitButtonItem Text="CSV" Value="csv" />
    </RadzenSplitButton>
    <RadzenTextBox Placeholder="Search ..." style="display: block; margin-bottom: 10px; width: 100%" @oninput="@Search" />
    <div class="row">
        <div class="col-md-12">
            <RadzenDataGrid @ref="grid0" AllowFiltering="true" FilterMode="Radzen.FilterMode.Advanced" AllowPaging="true" AllowSorting="true"
                            Data="@languages" TItem="Taraweb.Models.TarawebM1.Language" RowSelect="@EditRow">
                <Columns>
                    <RadzenDataGridColumn TItem="Taraweb.Models.TarawebM1.Language" Property="Code" Title="Code">
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Taraweb.Models.TarawebM1.Language" Property="IsActive" Title="IsActive">
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Taraweb.Models.TarawebM1.Language" Filterable="false" Sortable="false" Width="70px" TextAlign="TextAlign.Center">
                        <Template Context="language">
                            <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Small"
                                          Click=@(args => GridDeleteButtonClick(args, language)) @onclick:stopPropagation="true" />
                        </Template>
                    </RadzenDataGridColumn>
                </Columns>
            </RadzenDataGrid>
        </div>
    </div>
</RadzenContent>
@code {

    protected IEnumerable<Taraweb.Models.TarawebM1.Language> languages;

    protected RadzenDataGrid<Taraweb.Models.TarawebM1.Language> grid0;

    protected string search = "";

    protected async Task Search(ChangeEventArgs args)
    {
        search = $"{args.Value}";

        await grid0.GoToPage(0);

        languages = await TarawebM1Service.GetLanguages(new Query { Filter = $@"i => i.Code.Contains(@0)", FilterParameters = new object[] { search } });
    }
    protected override async Task OnInitializedAsync()
    {
        languages = await TarawebM1Service.GetLanguages(new Query { Filter = $@"i => i.Code.Contains(@0)", FilterParameters = new object[] { search } });
    }

    protected async Task AddButtonClick(MouseEventArgs args)
    {
        NavigationManager.NavigateTo("cms/add-language");
    }

    protected async Task EditRow(Taraweb.Models.TarawebM1.Language args)
    {
        NavigationManager.NavigateTo($"cms/add-language/{args.Id}");
    }

    protected async Task GridDeleteButtonClick(MouseEventArgs args, Taraweb.Models.TarawebM1.Language language)
    {
        try
        {
            if (await DialogService.Confirm("Are you sure you want to delete this record?") == true)
            {
                var deleteResult = await TarawebM1Service.DeleteLanguage(language.Id);

                if (deleteResult != null)
                {
                    await grid0.Reload();
                }
            }
        }
        catch (Exception ex)
        {
            NotificationService.Notify(new NotificationMessage
            {
                Severity = NotificationSeverity.Error,
                Summary = $"Error",
                Detail = $"Unable to delete Language"
            });
        }
    }

    protected async Task ExportClick(RadzenSplitButtonItem args)
    {
        if (args?.Value == "csv")
        {
            await TarawebM1Service.ExportLanguagesToCSV(new Query
            {
                Filter = $@"{(string.IsNullOrEmpty(grid0.Query.Filter) ? "true" : grid0.Query.Filter)}",
                OrderBy = $"{grid0.Query.OrderBy}",
                Expand = "",
                Select = string.Join(",", grid0.ColumnsCollection.Where(c => c.GetVisible()).Select(c => c.Property))
            }, "Languages");
        }

        if (args == null || args.Value == "xlsx")
        {
            await TarawebM1Service.ExportLanguagesToExcel(new Query
            {
                Filter = $@"{(string.IsNullOrEmpty(grid0.Query.Filter) ? "true" : grid0.Query.Filter)}",
                OrderBy = $"{grid0.Query.OrderBy}",
                Expand = "",
                Select = string.Join(",", grid0.ColumnsCollection.Where(c => c.GetVisible()).Select(c => c.Property))
            }, "Languages");
        }
    }
}
